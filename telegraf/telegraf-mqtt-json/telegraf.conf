[agent]
  interval = "5s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "5s"
  flush_jitter = "0s"
  precision = ""
  hostname = ""
  omit_hostname = false


# Configuration for PythonTestInputTemperatureControl topic
[[inputs.mqtt_consumer]]
  servers = ["tcp://mosquitto:1883"]
  topics = ["PythonTestInputTemperatureControl"]
  data_format = "json_v2"

  [[inputs.mqtt_consumer.json_v2]]
    measurement_name = "mqtt"

    [[inputs.mqtt_consumer.json_v2.field]]
      path = "cooler.temperature"
      rename = "PythonTestInputTemperatureControl/cooler/temperature"
      type = "float"

    [[inputs.mqtt_consumer.json_v2.field]]
      path = "cooler.value2"
      rename = "PythonTestInputTemperatureControl/cooler/value2"
      type = "float"

    [[inputs.mqtt_consumer.json_v2.field]]
      path = "heater.temperature"
      rename = "PythonTestInputTemperatureControl/heater/temperature"
      type = "float"

    [[inputs.mqtt_consumer.json_v2.field]]
      path = "heater.value2"
      rename = "PythonTestInputTemperatureControl/heater/value2"
      type = "float"

  [inputs.mqtt_consumer.tags]
    MQTTInputName = "PythonTestInputTemperatureControl"

# Configuration for PythonTestInputWaterTank topic
[[inputs.mqtt_consumer]]
  servers = ["tcp://mosquitto:1883"]
  topics = ["PythonTestInputWaterTank"]
  data_format = "json_v2"

  [[inputs.mqtt_consumer.json_v2]]
    measurement_name = "mqtt"

    [[inputs.mqtt_consumer.json_v2.field]]
      path = "Volume"
      rename = "PythonTestInputWaterTank/Volume"
      type = "float"

  [inputs.mqtt_consumer.tags]
    MQTTInputName = "PythonTestInputWaterTank"

[[outputs.influxdb_v2]]
    urls = ["http://influxdb:8086"]
    token = "$DOCKER_INFLUXDB_INIT_ADMIN_TOKEN"
    organization = "$DOCKER_INFLUXDB_INIT_ORG"
    bucket = "jsontest"
